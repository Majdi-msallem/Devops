properties([pipelineTriggers([githubPush()])])
pipeline{
    agent any 
          tools { 
        maven "M2_HOME" 
        }
        environment {
    registry = "majdimsallem/devops"
        registryCredential='dockerhub_id'
        dockerImage=''
         NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "http://192.168.1.13/:8081"
        NEXUS_REPOSITORY = "maven-nexus-repo"
        NEXUS_CREDENTIAL_ID = "nexus-user-credentials"
    }
        stages {
            stage('Checkout GIT ') {
                steps {
                    echo 'cheking Git hub Repo ...';
                    git branch : 'master',
                    url : 'https://github.com/Majdi-msallem/Devops.git'
                }
            }

/*
            stage('git clone') {
            steps {
               git branch: 'master', 
               url: 'https://github.com/Majdi-msallem/Devops.git'
        
            }
        }
        
       stage('MVN CLEAN INSTALL'){
            steps {
                sh 'mvn clean install'
            }
        }
stage("Maven Build") {
            steps {
                script {
                    sh "mvn package -DskipTests=true"
                }
            }
        } */

        /*
         stage('Building our image') { 
            steps { 
                script { 
                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 
                }
            } 
        }
       stage('Deploy our image') { 
            steps { 
                script { 
                    docker.withRegistry( '', registryCredential ) { 
                        dockerImage.push() 
                    }
                } 
            }
        } 
   
       
        stage('Cleaning up') { 
            steps { 
                sh "docker rmi $registry:185" 
            }
        } 
         */
       
 stage('SonarQube analysis') {
//    def scannerHome = tool 'SonarScanner 4.0';
        steps{
        withSonarQubeEnv('sonarqube-8.9.7') { 
        // If you have configured more than one global server connection, you can specify its name
//      sh "${scannerHome}/bin/sonar-scanner"
        sh "mvn sonar:sonar"
    }
        }
        }
        
       
        }
} 